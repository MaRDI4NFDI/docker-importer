#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import sqlalchemy as db
import os


def get_wbs_local_id(wbs_original_id):
    """
    Return the id of the Wikidata entity in the local instance according to the mapping generated by WikibaseImport
    @wbs_original_id: id of the item or property in Wikidata
    @returns local_id: id of the item or property on the local instance of Wikibase
    """
    # get the DB connection settings passed in docker-compose
    db_user = os.environ["DB_USER"]
    db_pass = os.environ["DB_PASS"]
    db_name = os.environ["DB_NAME"]
    db_host = os.environ["DB_HOST"]

    engine = db.create_engine(
        f"mysql+mysqlconnector://{db_user}:{db_pass}@{db_host}/{db_name}"
    )
    connection = engine.connect()
    metadata = db.MetaData()
    try:
        wbs_entity_mapping = db.Table(
            "wbs_entity_mapping", metadata, autoload=True, autoload_with=engine
        )
        query = db.select([wbs_entity_mapping.columns.wbs_local_id]).where(
            wbs_entity_mapping.columns.wbs_original_id
            == bytes(wbs_original_id, "utf-8")
        )
        result = connection.execute(query).fetchall()
        local_id = None
        if result:
            local_id = result[0][0].decode("utf-8")
    except Exception as e:
        raise ImporterException(
            "Error attempting to read mappings from database\n{}".format(e)
        )
    finally:
        connection.close()
        engine.dispose()

    return local_id
